var documenterSearchIndex = {"docs":
[{"location":"todo/#Todo","page":"Todo","title":"Todo","text":"","category":"section"},{"location":"todo/","page":"Todo","title":"Todo","text":"using Markdown, ModelSelectionGUI\r\nMarkdown.parse_file(joinpath(pkgdir(ModelSelectionGUI), \"TODO.md\"))","category":"page"},{"location":"license/#Licence","page":"License","title":"Licence","text":"","category":"section"},{"location":"license/","page":"License","title":"License","text":"using Markdown, ModelSelectionGUI\r\nMarkdown.parse_file(joinpath(pkgdir(ModelSelectionGUI), \"LICENSE\"))","category":"page"},{"location":"api/rest/#Rest-API","page":"Rest API","title":"Rest API","text":"","category":"section"},{"location":"api/rest/","page":"Rest API","title":"Rest API","text":"The Rest API endpoints are the core communication to interact with the backend services. ","category":"page"},{"location":"api/rest/#API-Endpoints-List","page":"Rest API","title":"API Endpoints List","text":"","category":"section"},{"location":"api/rest/","page":"Rest API","title":"Rest API","text":"GET /server-info\nPOST /upload-file\nPOST /job-enqueue/:filehash\nGET /job/:id\nGET /job/:id/results/:type","category":"page"},{"location":"api/rest/#API-Endpoints-Details","page":"Rest API","title":"API Endpoints Details","text":"","category":"section"},{"location":"api/rest/#GET-/server-info","page":"Rest API","title":"GET /server-info","text":"","category":"section"},{"location":"api/rest/","page":"Rest API","title":"Rest API","text":"Retrieves information about the server.","category":"page"},{"location":"api/rest/#Response","page":"Rest API","title":"Response","text":"","category":"section"},{"location":"api/rest/","page":"Rest API","title":"Rest API","text":"Status Code: 200 (OK)\nBody: JSON\njulia_version: The version of Julia running on the server.\nmodel_selection_version: The version of the ModelSelection package being used.\nncores: The number of CPU cores available on the server.\nnworkers: The number of workers available for parallel processing.\njobs_queue_size: The number of jobs currently in the queue.","category":"page"},{"location":"api/rest/","page":"Rest API","title":"Rest API","text":"Example JSON response:","category":"page"},{"location":"api/rest/","page":"Rest API","title":"Rest API","text":"{\r\n    \"julia_version\": \"1.6.7\",\r\n    \"model_selection_version\": \"1.2.0\",\r\n    \"ncores\": 8,\r\n    \"nworkers\": 4,\r\n    \"jobs_queue_size\": 0\r\n}","category":"page"},{"location":"api/rest/","page":"Rest API","title":"Rest API","text":"Return to the top","category":"page"},{"location":"api/rest/#POST-/upload-file","page":"Rest API","title":"POST /upload-file","text":"","category":"section"},{"location":"api/rest/","page":"Rest API","title":"Rest API","text":"Uploads a CSV file to the server. Upon successful upload, the server will process the uploaded file for further operations.","category":"page"},{"location":"api/rest/#Request","page":"Rest API","title":"Request","text":"","category":"section"},{"location":"api/rest/","page":"Rest API","title":"Rest API","text":"Method: POST\nBody: form-data\nParameter: data\nDescription: The CSV file to upload.\nType: File","category":"page"},{"location":"api/rest/#Response-2","page":"Rest API","title":"Response","text":"","category":"section"},{"location":"api/rest/","page":"Rest API","title":"Rest API","text":"Status Code: 200 (OK).\nBody: JSON\nfilename: The name of the uploaded file.\ndatanames: The names of the columns in the CSV file.\nnobs: The number of observations (rows) in the CSV file.\nfilehash: The unique identifier (UUID) for the uploaded file.","category":"page"},{"location":"api/rest/","page":"Rest API","title":"Rest API","text":"Example JSON response:","category":"page"},{"location":"api/rest/","page":"Rest API","title":"Rest API","text":"{\r\n    \"filename\": \"data.csv\",\r\n    \"datanames\": [\"y\", \"x1\", \"x2\", \"x3\", \"x4\", \"x5\"],\r\n    \"nobs\": 100,\r\n    \"filehash\": \"6c48451b-af17-43cb-a251-e847abc94472\"\r\n}","category":"page"},{"location":"api/rest/","page":"Rest API","title":"Rest API","text":"Return to the top","category":"page"},{"location":"api/rest/#POST-/job-enqueue/:filehash","page":"Rest API","title":"POST /job-enqueue/:filehash","text":"","category":"section"},{"location":"api/rest/","page":"Rest API","title":"Rest API","text":"Enqueues a model selection job for the specified file. The task will be executed after the previously queued tasks have finished.","category":"page"},{"location":"api/rest/#Request-2","page":"Rest API","title":"Request","text":"","category":"section"},{"location":"api/rest/","page":"Rest API","title":"Rest API","text":"Method: POST\nQuery parameter:\nfilehash: The unique identifier (UUID) of the uploaded file to perform model selection on.\nBody: JSON\nestimator: The estimator to use for model selection (e.g., \"ols\").\nequation: The equation or formula specifying the dependent and independent variables.\nttest: Flag indicating whether to perform t-tests. Default is true.","category":"page"},{"location":"api/rest/","page":"Rest API","title":"Rest API","text":"Example JSON Request:","category":"page"},{"location":"api/rest/","page":"Rest API","title":"Rest API","text":"{\r\n    \"estimator\": \"ols\",\r\n    \"equation\": \"y x1 x2 x3\",\r\n    \"ttest\": true,\r\n}","category":"page"},{"location":"api/rest/","page":"Rest API","title":"Rest API","text":"Note: Please refer to the ModelSelection package documentation for additional parameters that can be included in the request.","category":"page"},{"location":"api/rest/#Response-3","page":"Rest API","title":"Response","text":"","category":"section"},{"location":"api/rest/","page":"Rest API","title":"Rest API","text":"Status Code: 200 (OK).\nBody: JSON\nid: The unique identifier (UUID) of the model selection job.\nfilehash: The unique identifier (UUID) of the file used for model selection.\nfilename: The name of the file used for model selection.\nstatus: The status of the model selection job (\"pending\", \"running\", \"finished\", or \"failed\").\nmsg: A message associated with the status, if any.\ntime_enqueued: The timestamp when the model selection job was enqueued.\ntime_started: The timestamp when the model selection job started, if applicable.\ntime_finished: The timestamp when the model selection job finished, if applicable.\nestimator: The estimator used for model selection.\nequation: The equation or formula used for model selection.\nparameters: The parameters used for model selection, including any additional parameters specified in the request.","category":"page"},{"location":"api/rest/","page":"Rest API","title":"Rest API","text":"Example JSON response:","category":"page"},{"location":"api/rest/","page":"Rest API","title":"Rest API","text":"{\r\n    \"id\": \"adbc7420-1597-4b1b-a798-fafd9ee5f671\",\r\n    \"filehash\": \"12413947-95bc-4573-a804-efcb2293e808\",\r\n    \"filename\": \"data.csv\",\r\n    \"status\": \"pending\",\r\n    \"msg\": null,\r\n    \"time_enqueued\": \"2023-06-07T16:38:11.18\",\r\n    \"time_started\": null,\r\n    \"time_finished\": null,\r\n    \"estimator\": \"ols\",\r\n    \"equation\": \"y x1 x2 x3\",\r\n    \"parameters\": {\r\n        \"ttest\": true,\r\n    }\r\n}","category":"page"},{"location":"api/rest/","page":"Rest API","title":"Rest API","text":"Note: The response contains detailed information about the initiated model selection process, including the current status and the parameters used.","category":"page"},{"location":"api/rest/","page":"Rest API","title":"Rest API","text":"Return to the top","category":"page"},{"location":"api/rest/#GET-/job/:id","page":"Rest API","title":"GET /job/:id","text":"","category":"section"},{"location":"api/rest/","page":"Rest API","title":"Rest API","text":"Retrieves the info of a model selection job. If the job is finished, it also includes the summary of a model selection job.","category":"page"},{"location":"api/rest/#Request-3","page":"Rest API","title":"Request","text":"","category":"section"},{"location":"api/rest/","page":"Rest API","title":"Rest API","text":"Method: GET\nQuery parameter:\nid: The unique identifier (UUID) of the model selection job.","category":"page"},{"location":"api/rest/#Response-4","page":"Rest API","title":"Response","text":"","category":"section"},{"location":"api/rest/","page":"Rest API","title":"Rest API","text":"Status Code: 200 (OK).\nBody: JSON\nid: The unique identifier (UUID) of the model selection job.\nfilehash: The unique identifier (UUID) of the file used for model selection.\nfilename: The name of the file used for model selection.\nstatus: The status of the model selection job (\"pending\", \"running\", \"finished\", or \"failed\").\nmsg: A message associated with the status, if any.\ntime_enqueued: The timestamp when the model selection job was enqueued.\ntime_started: The timestamp when the model selection job started, if applicable.\ntime_finished: The timestamp when the model selection job finished, if applicable.\nestimator: The estimator used for model selection.\nequation: The equation or formula used for model selection.\nparameters: The parameters used for model selection, including any additional parameters specified in the request.\nresults: The results of the model selection job, including different types of analysis, if finished.","category":"page"},{"location":"api/rest/","page":"Rest API","title":"Rest API","text":"Example JSON response:","category":"page"},{"location":"api/rest/","page":"Rest API","title":"Rest API","text":"{\r\n    \"id\": \"adbc7420-1597-4b1b-a798-fafd9ee5f671\",\r\n    \"filehash\": \"12413947-95bc-4573-a804-efcb2293e808\",\r\n    \"filename\": \"data.csv\",\r\n    \"status\": \"pending\",\r\n    \"msg\": null,\r\n    \"time_enqueued\": \"2023-06-07T16:38:11.18\",\r\n    \"time_started\": null,\r\n    \"time_finished\": null,\r\n    \"estimator\": \"ols\",\r\n    \"equation\": \"y x1 x2 x3\",\r\n    \"parameters\": {\r\n        \"ttest\": true,\r\n    },\r\n    \"results\": {\r\n        \"crossvalidation\": {\r\n            \"average\": {},\r\n            \"median\": {}\r\n        },\r\n        \"allsubsetregression\": {\r\n            \"modelavg\": {}\r\n        },\r\n    }\r\n}","category":"page"},{"location":"api/rest/","page":"Rest API","title":"Rest API","text":"Note: The response contains detailed information about the initiated model selection job, including the current status and the parameters used.","category":"page"},{"location":"api/rest/","page":"Rest API","title":"Rest API","text":"Return to the top","category":"page"},{"location":"api/rest/#GET-/job/:id/results/:type","page":"Rest API","title":"GET /job/:id/results/:type","text":"","category":"section"},{"location":"api/rest/","page":"Rest API","title":"Rest API","text":"Retrieves the result file of a specific type for a model selection job.","category":"page"},{"location":"api/rest/#Request-4","page":"Rest API","title":"Request","text":"","category":"section"},{"location":"api/rest/","page":"Rest API","title":"Rest API","text":"Method: GET\nQuery parameters:\nid: The unique identifier (UUID) of the model selection job.\ntype: The type of result file to retrieve. Possible values: summary, allsubsetregression, crossvalidation.","category":"page"},{"location":"api/rest/#Response-5","page":"Rest API","title":"Response","text":"","category":"section"},{"location":"api/rest/","page":"Rest API","title":"Rest API","text":"Status Code: 200 (OK)\nBody: The response returns the result file in the corresponding format based on the type specified.","category":"page"},{"location":"api/rest/","page":"Rest API","title":"Rest API","text":"Note: The response should include appropriate headers to indicate the file type and provide options for file download or display. The filename is a concatenation of the original data filename and the type.","category":"page"},{"location":"api/rest/","page":"Rest API","title":"Rest API","text":"Example: If the type is summary and the response is a plain text file, the following headers can be set:","category":"page"},{"location":"api/rest/","page":"Rest API","title":"Rest API","text":"Content-Type: text/plain\r\nContent-Disposition: inline; filename=summary.txt","category":"page"},{"location":"api/rest/","page":"Rest API","title":"Rest API","text":"Example: If the type is allsubsetregression or crossvalidation and the response is a CSV file, the following headers can be set:","category":"page"},{"location":"api/rest/","page":"Rest API","title":"Rest API","text":"Content-Type: text/csv\r\nContent-Disposition: attachment; filename=result.csv","category":"page"},{"location":"api/rest/","page":"Rest API","title":"Rest API","text":"Return to the top","category":"page"},{"location":"api/websockets/#Websockets","page":"Websockets","title":"Websockets","text":"","category":"section"},{"location":"api/websockets/","page":"Websockets","title":"Websockets","text":"It is possible to have a continuous status on the execution of a job using web sockets.","category":"page"},{"location":"api/websockets/#How-to-stablish-a-connection","page":"Websockets","title":"How to stablish a connection","text":"","category":"section"},{"location":"api/websockets/","page":"Websockets","title":"Websockets","text":"URL: ws://localhost:8080 (please change the port for the one that is in your configuration)\nChannel: sync","category":"page"},{"location":"api/websockets/","page":"Websockets","title":"Websockets","text":"Example connection in JS:","category":"page"},{"location":"api/websockets/","page":"Websockets","title":"Websockets","text":"const ws = new WebSocket(\"ws://localhost:8000\");\r\nconst msg = {\r\n    channel: \"sync\",\r\n    message: \"subscribe\",\r\n    payload: {},\r\n};\r\nws.send(JSON.stringify(msg));","category":"page"},{"location":"api/websockets/#Receive-information","page":"Websockets","title":"Receive information","text":"","category":"section"},{"location":"api/websockets/","page":"Websockets","title":"Websockets","text":"The server will be sending information about the current job in a JSON message that contains the following structure:     - id: The unique identifier (UUID) of the model selection job.     - message: The content or description of the message.     - data: Additional data associated with the message.","category":"page"},{"location":"api/websockets/","page":"Websockets","title":"Websockets","text":"Example JSON message:","category":"page"},{"location":"api/websockets/","page":"Websockets","title":"Websockets","text":"{\r\n    \"id\": \"adbc7420-1597-4b1b-a798-fafd9ee5f671\",\r\n    \"message\": \"Running regressions\",\r\n    \"data\": {\r\n        \"progress\": 20,\r\n        \"total\": 100\r\n    }\r\n}","category":"page"},{"location":"api/websockets/","page":"Websockets","title":"Websockets","text":"Example of how tho receive the messages from the server:","category":"page"},{"location":"api/websockets/","page":"Websockets","title":"Websockets","text":"ws.onmessage = (event) => {\r\n  console.log(event.data);\r\n}","category":"page"},{"location":"contributing/#Contributing","page":"Contributing","title":"Contributing","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"using Markdown, ModelSelectionGUI\r\nMarkdown.parse_file(joinpath(pkgdir(ModelSelectionGUI), \"CONTRIBUTING.md\"))","category":"page"},{"location":"start/#Getting-started","page":"Getting Started","title":"Getting started","text":"","category":"section"},{"location":"start/#Installation","page":"Getting Started","title":"Installation","text":"","category":"section"},{"location":"start/","page":"Getting Started","title":"Getting Started","text":"You can install the package by running the following command in the Julia REPL:","category":"page"},{"location":"start/","page":"Getting Started","title":"Getting Started","text":"using Pkg\nPkg.add(\"ModelSelectionGUI\")","category":"page"},{"location":"start/#Usage","page":"Getting Started","title":"Usage","text":"","category":"section"},{"location":"start/","page":"Getting Started","title":"Getting Started","text":"To start the web server and access the GUI, follow these steps:","category":"page"},{"location":"start/","page":"Getting Started","title":"Getting Started","text":"using ModelSelectionGUI\nstart()","category":"page"},{"location":"start/","page":"Getting Started","title":"Getting Started","text":"If the web client is enabled open your web browser and enter the following URL: http://localhost:8000 (please change the port for the one that is in your configuration)","category":"page"},{"location":"api/rest/swagger/#Swagger-Documentation","page":"Swagger Documentation","title":"Swagger Documentation","text":"","category":"section"},{"location":"api/rest/swagger/","page":"Swagger Documentation","title":"Swagger Documentation","text":"The package provides a comprehensive API documentation powered by Swagger. You can access the API documentation by visiting the /docs URL of your deployed application. This documentation offers a detailed overview of all available endpoints, request/response examples, and parameter details.","category":"page"},{"location":"api/rest/swagger/#Accessing-the-Swagger-Documentation","page":"Swagger Documentation","title":"Accessing the Swagger Documentation","text":"","category":"section"},{"location":"api/rest/swagger/","page":"Swagger Documentation","title":"Swagger Documentation","text":"To access the Swagger documentation for the ModelSelectionGUI package, follow these steps:","category":"page"},{"location":"api/rest/swagger/","page":"Swagger Documentation","title":"Swagger Documentation","text":"Start the server and ensure it is running.\nOpen a web browser.\nIn the address bar, enter the URL of your deployed application followed by /docs. For example: http://127.0.0.1/docs.\nThe Swagger documentation page will load, displaying all the available endpoints, their descriptions, and other relevant information.","category":"page"},{"location":"api/rest/swagger/#Using-Swagger-for-Testing-and-Exploration","page":"Swagger Documentation","title":"Using Swagger for Testing and Exploration","text":"","category":"section"},{"location":"api/rest/swagger/","page":"Swagger Documentation","title":"Swagger Documentation","text":"The Swagger documentation not only serves as a reference for the endpoints but also provides an interactive environment for testing and exploring the API. With Swagger UI, you can easily send requests to different endpoints, view their responses, and experiment with various parameters.","category":"page"},{"location":"api/rest/swagger/","page":"Swagger Documentation","title":"Swagger Documentation","text":"Feel free to leverage the Swagger documentation to understand the functionality of the ModelSelectionGUI package, explore different endpoints, and test API requests right from your browser.","category":"page"},{"location":"news/#Todo","page":"News","title":"Todo","text":"","category":"section"},{"location":"news/","page":"News","title":"News","text":"using Markdown, ModelSelectionGUI\r\nMarkdown.parse_file(joinpath(pkgdir(ModelSelectionGUI), \"NEWS.md\"))","category":"page"},{"location":"configuration/#Configuration","page":"Configuration","title":"Configuration","text":"","category":"section"},{"location":"configuration/#Environment-variables","page":"Configuration","title":"Environment variables","text":"","category":"section"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"The package supports the following environment variables for configuration:","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"SERVER_PORT (optional): The port number on which the web server will listen. Default value is 8000 if not specified.\nCLIENT_PORT (optional): The port number for the client to communicate with the server. Default value is SERVER_PORT + 1 if not specified.\nOPEN_BROWSER (optional): A boolean flag indicating whether to automatically open the web browser after starting the server with the documentation. Default value is false if not specified.\nOPEN_CLIENT (optional): A boolean flag indicating whether to automatically open the web browser after starting the server with the client. Default value is true if not specified.\nSERVER_URL (optional): The URL of the backend server's API. Default value is 127.0.0.1.","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"You can choose to set these environment variables based on your specific requirements. If not set, the package will use the default values mentioned above.","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"To set these environment variables, you can create a .env file in the root directory of your project. You can copy the .env.template file as a starting point. Then, modify the values in the .env file according to your desired configuration.","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"To set an environment variable, you can use the following syntax:","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"export VARIABLE_NAME=value","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"For example, to set the SERVER_PORT environment variable to 9000, you can use:","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"export SERVER_PORT=9000","category":"page"},{"location":"configuration/#Load-environment-variables","page":"Configuration","title":"Load environment variables","text":"","category":"section"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"The dotenv file will .env as default. If a custom file is needed, you can use the command in the Julia REPL:","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"start(dotenv=\".mycustomenv\")\r\n\r\n# or\r\n\r\nload_dotenv(\".mycustomenv\")\r\nstart()","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"Please note that modifying environment variables may require restarting the web server for the changes to take effect.","category":"page"},{"location":"#ModelSelectionGUI","page":"Home","title":"ModelSelectionGUI","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The ModelSelectionGUI is a web server package designed to provide a user-friendly interface for utilizing the ModelSelection package. It consists of a backend and an optional frontend that offers a graphical user interface (GUI) for seamless interaction with the underlying ModelSelection functionality.","category":"page"},{"location":"#Features","page":"Home","title":"Features","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Web server backend: The package includes a web server backend that handles requests and responses between the user and the ModelSelection package.\nGood documentation: The package provides a comprehensive API documentation powered by Swagger.\nGraphical User Interface (GUI): The optional frontend provides a GUI that allows users to interact with the ModelSelection package using a visual interface, making it easier to explore and utilize the various functionalities.\nEasy Integration: The ModelSelectionGUI is designed to seamlessly integrate with the ModelSelection package, providing a user-friendly interface to access and utilize its capabilities without requiring in-depth knowledge of the underlying Julia code.","category":"page"},{"location":"#Contributing","page":"Home","title":"Contributing","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Contributions are welcome! If you encounter any issues or have suggestions for improvements, please open an issue or submit a pull request on the repository. Make sure to follow the guidelines outlined in the Contributing section.","category":"page"},{"location":"#TODO-List","page":"Home","title":"TODO List","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"For an overview of pending tasks, improvements, and future plans for the ModelSelectionGUI package, please refer to the TODO section.","category":"page"},{"location":"#License","page":"Home","title":"License","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package is licensed under the MIT License.","category":"page"},{"location":"#ModelSelection.jl","page":"Home","title":"ModelSelection.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package functions as an interface with ModelSelection.jl. For more details about the functionalities and features provided by ModelSelection.jl, please visit the package repository.","category":"page"}]
}
